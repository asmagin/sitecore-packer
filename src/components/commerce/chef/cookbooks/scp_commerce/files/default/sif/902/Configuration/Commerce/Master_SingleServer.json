// ------------------------------------------------------------------------------------------------------ //
//         Sitecore Install Framework - Commerce Single Server Configuration                              //
//                                                                                                        //
//  Run this configuration to install a single instance of Commerce Engine and Sitecore Storefront Site.  //
//																										  //
//                                                                                                        //
//  NOTE: Only single line comments are accepted in configurations.                                       //
// ------------------------------------------------------------------------------------------------------ //


{
  "Parameters": {
    // Parameters are values that may be passed when Install-SitecoreConfiguration is called.
    // Parameters must declare a Type and may declare a DefaultValue and Description.
    // Parameters with no DefaultValue are required when Install-SitecoreConfiguration is called.
    "AzureSearchAdminKey": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service admin key. Requires param CommerceSearchProvider to be set to 'AZURE'" },
    "AzureSearchIndexPrefix": { "Type": "string", "DefaultValue": "sc9", "Description": "The Azure search prefix used for all indexes. Requires param CommerceSearchProvider to be set to 'AZURE'" },
    "AzureSearchQueryKey": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service query key. Requires param CommerceSearchProvider to be set to 'AZURE'" },
    "AzureSearchServiceName": { "Type": "string", "DefaultValue": "", "Description": "The Azure search service name. Requires param CommerceSearchProvider to be set to 'AZURE'" },

    "CommerceEngineCertificateName": { "Type": "string" },
    "CommerceEngineCertificatePath": { "Type": "string", "Description": "Commerce Engile certificate full path" },
    "CommerceSearchProvider": { "Type": "string", "DefaultValue": "SOLR", "Description": "The search provider used for the Commerce Engine - Accepted values are 'SOLR' and 'AZURE'" },
    "CommerceServicesPrefix": { "Type": "string", "DefaultValue": "sc9", "Description": "The Commerce Engine prefix for services names" },

    "CertPath": { "Type": "string", "Description": "The physical path on disk where certificates will be stored.", "DefaultValue": "c:\\certificates" },
    "RootCertFileName": { "Type": "string", "Description": "The file name of the root certificate to be created.", "DefaultValue": "SitecoreRootCert" },

    "CommerceAuthoring": { "Type": "string" },
    "CommerceAuthoringCertificateDnsName": { "Type": "string" },
    "CommerceAuthoringCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "CommerceAuthoringDir": { "Type": "string" },
    "CommerceAuthoringHostHeader": { "Type": "string" },
    "CommerceAuthoringServicesPort": { "Type": "string", "Description": "Commerce Authoring Services port" },

    "CommerceMinions": { "Type": "string" },
    "CommerceMinionsCertificateDnsName": { "Type": "string" },
    "CommerceMinionsCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "CommerceMinionsDir": { "Type": "string" },
    "CommerceMinionsHostHeader": { "Type": "string" },
    "CommerceMinionsServicesPort": { "Type": "string", "Description": "Commerce Minions Services port" },

    "CommerceOps": { "Type": "string" },
    "CommerceOpsCertificateDnsName": { "Type": "string" },
    "CommerceOpsCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "CommerceOpsDir": { "Type": "string" },
    "CommerceOpsHostHeader": { "Type": "string" },
    "CommerceOpsServicesPort": { "Type": "string", "Description": "Commerce Ops Services port" },

    "CommerceShops": { "Type": "string" },
    "CommerceShopsCertificateDnsName": { "Type": "string" },
    "CommerceShopsCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "CommerceShopsDir": { "Type": "string" },
    "CommerceShopsHostHeader": { "Type": "string" },
    "CommerceShopsServicesPort": { "Type": "string", "Description": "Commerce Shops Services port" },

    "SitecoreBizFx": { "Type": "string" },
    "SitecoreBizFxCertificateDnsName": { "Type": "string" },
    "SitecoreBizFxCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "SitecoreBizFxDir": { "Type": "string" },
    "SitecoreBizFxHostHeader": { "Type": "string", "DefaultValue": "SitecoreBizFx", "Description": "Sitecore Identity Server name" },
    "SitecoreBizFxServicesPort": { "Type": "string", "DefaultValue": "4200" },

    "SitecoreIdentityServer": { "Type": "string" },
    "SitecoreIdentityServerCertificateDnsName": { "Type": "string" },
    "SitecoreIdentityServerCertificateName": { "Type": "string", "Description": "The name of the certificate to be used." },
    "SitecoreIdentityServerDir": { "Type": "string" },
    "SitecoreIdentityServerHostHeader": { "Type": "string", "DefaultValue": "SitecoreIdentityServer", "Description": "Sitecore Identity Server name" },
    "SitecoreIdentityServerServicesPort": { "Type": "string", "DefaultValue": "5050" },

    "PackageCommerceConnectPath": { "Type": "string", "Description": "Commerce Connect module full path" },
	"PackagexProfilesPath": {"Type": "string", "Description": "Commerce xProfiles module full path"},
    "PackagexAnalyticsPath": {"Type": "string","Description": "Commerce xAnalytics module full path"},
    "PackageCommerceMAPath": {"Type": "string", "Description": "Commerce Marketing Automation module full path"},
    "PackageMAForAutomationEnginePath": {"Type": "string", "Description": "Commerce Marketing Automation for AutomationEngine module full path"},
    "PackageAdventureWorksImagesPath ": { "Type": "string", "Description": "Adventure Works Images module full path" },
    "PackageCEConnectPath": { "Type": "string", "Description": "Commerce Engine Connect module full path" },
    "PackageHabitatImagesPath": { "Type": "string", "Description": "Habitat Images module full path" },
    "PackageCommerceEngineDacPacPath": { "Type": "string", "Description": "Commerce Engine DacPac" },
    "PackageSitecoreCommerceEnginePath": { "Type": "string", "Description": "Sitecore Commerce Engine Zip Path" },
    "PackagePowerShellExtensionsPath": { "Type": "string", "Description": "PowerShell Extensions module full path" },
    "PackageSitecoreBizFxServicesContentDir": { "Type": "string", "Description": "SitecoreBizFx Services Content Path" },

    "PackageSXACommercePath": { "Type": "string", "Description": "SXA Commerce module full path" },
    "PackageSXAPath": { "Type": "string", "Description": "Sitecore Experience Accelerator module full path" },
    "PackageSXAStorefrontCatalogPath": { "Type": "string", "Description": "SXA Storefront Catalog module full path" },
    "PackageSXAStorefrontPath": { "Type": "string", "Description": "SXA Storefront module full path" },
    "PackageSXAStorefrontThemePath": { "Type": "string", "Description": "SXA Storefront Themes module full path" },
    "PackageSitecoreIdentityServerPath": { "Type": "string", "Description": "SitecoreIdentityServer Zip Path" },

    "SitecoreUsername": { "Type": "string", "Description": "Sitecore Admin Username" },
    "SitecoreUserPassword": { "Type": "string", "Description": "Sitecore Admin Password" },
    "SiteHostHeader": { "Type": "string", "Description": "The host header name of the site to be deployed." },
    "SiteInstallDir": { "Type": "string", "Description": "The sitecore site content path." },
    "SiteName": { "Type": "string", "Description": "The name of the site to be deployed." },

    "ToolsMergeToolPath": { "Type": "string", "Description": "The Merge Tool full path" },
    "ToolsSiteUtilitiesDir": { "Type": "string", "Description": "Site Utilities source path" },

    "SolrCorePrefix": { "Type": "string", "DefaultValue": "sc9", "Description": "The prefix used for all Solr cores." },
    "SolrInstallDir": { "Type": "string", "DefaultValue": "c:\\solr-6.6.2", "Description": "The file path to the Solr instance." },
    "SolrSchemasDir": { "Type": "string", "DefaultValue": "", "Description": "The path to Solr schemas." },
    "SolrServiceName": { "Type": "string", "DefaultValue": "Solr-6.6.2", "Description": "The name of the Solr service." },
    "SolrUrl": { "Type": "string", "DefaultValue": "https://localhost:8983/solr", "Description": "The Solr instance url." },

    "SqlCommerceServicesDbName": { "Type": "string", "DefaultValue": "SitecoreCommerce9_SharedEnvironments", "Description": "The Commerce Engine database name." },
    "SqlCommerceServicesDbServer": { "Type": "string", "DefaultValue": ".\\SQLSERVER", "Description": "The Commerce Engine database server name." },
    "SqlCommerceServicesGlobalDbName": { "Type": "string", "DefaultValue": "SitecoreCommerce9_Global", "Description": "The Commerce Engine global database name" },
    "SqlDbPrefix": { "Type": "string", "DefaultValue": "sc9", "Description": "The prefix used for all Sql databases." },
    "SqlSitecoreCoreDbName": { "Type": "string", "Description": "The Sitecore Core database name." },
    "SqlSitecoreDbServer": { "Type": "string", "DefaultValue": ".\\SQLSERVER", "Description": "The Sitecore database server name." },

    "BraintreeAccount": { "Type": "psobject", "Description": "Braintree sandbox account for Payment plugin" },
    "UserAccount": { "Type": "psobject", "Description": "UserAccount for Commerce Serices App Pool" },
    "XConnectInstallDir": { "Type": "string", "Description": "The sitecore xConnect site content path." }
    },
  "Variables": {
    // Variables are values calculated in a configuration.
    // They can reference Parameters, other Variables, and config functions.
    "CEMergeInputFile": "[concat(parameter('SiteInstallDir'), '\\MergeFiles\\Sitecore.Commerce.Engine.Connectors.Merge.Config')]",
    "ConnectionString": "[concat('Data Source=.;Initial Catalog=', parameter('SqlSitecoreCoreDbName'), ';Integrated Security=True')]",
    "ContentSearchConfig": "[concat(parameter('SiteInstallDir'), '\\App_Config\\Sitecore\\ContentSearch\\Sitecore.ContentSearch.config')]",
    "ContentSearchEnabledXPath": "//configuration/sitecore/settings/setting[@name='ContentSearch.Enabled']",
    "EngineConnectIncludeDir": "[concat(parameter('SiteInstallDir'), '\\App_Config\\Include\\Y.Commerce.Engine')]",
    "MarketingConfigDir": "[concat(parameter('SiteInstallDir'), '\\App_Config\\Sitecore\\Marketing.Operations.xMgmt')]",
    "ProjectConfigIncludeDir": "[concat(parameter('SiteInstallDir'), '\\App_Config\\Include\\Project\\Commerce')]",
    "SitecoreAdminPackagesDir": "[concat(parameter('SiteInstallDir'), '\\sitecore\\admin\\Packages')]",
    "SitecoreAppDataPackagesDir": "[concat(parameter('SiteInstallDir'), '\\App_Data\\packages')]",
    "SiteRootUrl": "[concat('http://', parameter('SiteHostHeader'))]",
    "SiteUtilitiesDir": "[concat(parameter('SiteInstallDir'), '\\SiteUtilityPages')]",
    "UtilitiesBaseUrl": "[concat('http://', parameter('SiteHostHeader'), '/SiteUtilityPages')]",
    "WebConfig": "[concat(parameter('SiteInstallDir'), '\\Web.Config')]"
  },
  "Modules": ["InstallSitecoreConfiguration", "ManageCommerceService", "SitecoreUtilityTasks"],
  "Tasks": {
    // Tasks are separate units of work in a configuration.
    // Each task is an action that will be completed when Install-SitecoreConfiguration is called.
    // By default, tasks are applied in the order they are declared.
    // Tasks may reference Parameters, Variables, and config functions.
    "GenerateCertificates": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Certificates\\Certificates.json",

        "CommerceAuthoringCertificateDnsName": "[parameter('CommerceAuthoringCertificateDnsName')]",
        "CommerceAuthoringCertificateName": "[parameter('CommerceAuthoringCertificateName')]",

        "CommerceMinionsCertificateDnsName": "[parameter('CommerceMinionsCertificateDnsName')]",
        "CommerceMinionsCertificateName": "[parameter('CommerceMinionsCertificateName')]",

        "CommerceOpsCertificateDnsName": "[parameter('CommerceOpsCertificateDnsName')]",
        "CommerceOpsCertificateName": "[parameter('CommerceOpsCertificateName')]",

        "CommerceShopsCertificateDnsName": "[parameter('CommerceShopsCertificateDnsName')]",
        "CommerceShopsCertificateName": "[parameter('CommerceShopsCertificateName')]",

        "SitecoreBizFxCertificateDnsName": "[parameter('SitecoreBizFxCertificateDnsName')]",
        "SitecoreBizFxCertificateName": "[parameter('SitecoreBizFxCertificateName')]",

        "SitecoreIdentityServerCertificateDnsName": "[parameter('SitecoreIdentityServerCertificateDnsName')]",
        "SitecoreIdentityServerCertificateName": "[parameter('SitecoreIdentityServerCertificateName')]",

        "CommerceEngineCertificateDnsName": "[parameter('CommerceEngineCertificateName')]",
        "CommerceEngineCertificateName": "[parameter('CommerceEngineCertificateName')]",
        
        "RootCertFileName": "[parameter('RootCertFileName')]",

        "UserAccount": "[parameter('UserAccount')]"
      }
    },
    "InstallSolrCores": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Solr\\sitecore-commerce-solr.json",
        "SolrCorePrefix": "[parameter('SolrCorePrefix')]",
        "SolrInstallDir": "[parameter('SolrInstallDir')]",
        "SolrSchemasDir": "[parameter('SolrSchemasDir')]",
        "SolrServiceName": "[parameter('SolrServiceName')]",
        "SolrUrl": "[parameter('SolrUrl')]"
      }
    },
    "DeployCommerceEngine": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CommerceEngine\\CommerceEngine.Deploy.json",

        "AzureSearchAdminKey": "[parameter('AzureSearchAdminKey')]",
        "AzureSearchIndexPrefix": "[parameter('AzureSearchIndexPrefix')]",
        "AzureSearchQueryKey": "[parameter('AzureSearchQueryKey')]",
        "AzureSearchServiceName": "[parameter('AzureSearchServiceName')]",

        "CommerceAuthoring": "[parameter('CommerceAuthoring')]",
        "CommerceAuthoringCertificateDnsName": "[parameter('CommerceAuthoringCertificateDnsName')]",
        "CommerceAuthoringDir": "[parameter('CommerceAuthoringDir')]",
        "CommerceAuthoringHostHeader": "[parameter('CommerceAuthoringHostHeader')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",

        "CommerceMinions": "[parameter('CommerceMinions')]",
        "CommerceMinionsCertificateDnsName": "[parameter('CommerceMinionsCertificateDnsName')]",
        "CommerceMinionsDir": "[parameter('CommerceMinionsDir')]",
        "CommerceMinionsHostHeader": "[parameter('CommerceMinionsHostHeader')]",
        "CommerceMinionsServicesPort": "[parameter('CommerceMinionsServicesPort')]",

        "CommerceOps": "[parameter('CommerceOps')]",
        "CommerceOpsCertificateDnsName": "[parameter('CommerceOpsCertificateDnsName')]",
        "CommerceOpsDir": "[parameter('CommerceOpsDir')]",
        "CommerceOpsHostHeader": "[parameter('CommerceOpsHostHeader')]",
        "CommerceOpsServicesPort": "[parameter('CommerceOpsServicesPort')]",

        "CommerceShops": "[parameter('CommerceShops')]",
        "CommerceShopsCertificateDnsName": "[parameter('CommerceShopsCertificateDnsName')]",
        "CommerceShopsDir": "[parameter('CommerceShopsDir')]",
        "CommerceShopsHostHeader": "[parameter('CommerceShopsHostHeader')]",
        "CommerceShopsServicesPort": "[parameter('CommerceShopsServicesPort')]",
        
        "PackageCommerceEngineDacPacPath": "[parameter('PackageCommerceEngineDacPacPath')]",
        "PackageSitecoreCommerceEnginePath": "[parameter('PackageSitecoreCommerceEnginePath')]",
        
        "CommerceSearchProvider": "[parameter('CommerceSearchProvider')]",
        "RootCertFileName": "[parameter('RootCertFileName')]",
        
        "SitecoreIdentityServerHostHeader": "[parameter('SitecoreIdentityServerHostHeader')]",
        "SitecoreIdentityServerServicesPort": "[parameter('SitecoreIdentityServerServicesPort')]",
        
        "SitecoreBizFxHostHeader": "[parameter('SitecoreBizFxHostHeader')]",
        "SitecoreBizFxServicesPort": "[parameter('SitecoreBizFxServicesPort')]",

        "SiteHostHeader": "[parameter('SiteHostHeader')]",
        "SitecoreUsername": "[parameter('SitecoreUsername')]",
        "SitecoreUserPassword": "[parameter('SitecoreUserPassword')]",

        "SolrCorePrefix": "[parameter('SolrCorePrefix')]",
        "SolrUrl": "[parameter('SolrUrl')]",

        "SqlCommerceServicesDbName": "[parameter('SqlCommerceServicesDbName')]",
        "SqlCommerceServicesDbServer": "[parameter('SqlCommerceServicesDbServer')]",
        "SqlCommerceServicesGlobalDbName": "[parameter('SqlCommerceServicesGlobalDbName')]",
        "SqlSitecoreCoreDbName": "[parameter('SqlSitecoreCoreDbName')]",
        "SqlSitecoreDbServer": "[parameter('SqlSitecoreDbServer')]",

        "BraintreeAccount": "[parameter('BraintreeAccount')]",
        "UserAccount": "[parameter('UserAccount')]"
      }
    },
    "DeploySitecoreBizFx": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\SitecoreBizFx\\SitecoreBizFx.json",

        "CommerceAuthoringHostHeader": "[parameter('CommerceAuthoringHostHeader')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",

        "SitecoreIdentityServerHostHeader": "[parameter('SitecoreIdentityServerHostHeader')]",
        "SitecoreIdentityServerServicesPort": "[parameter('SitecoreIdentityServerServicesPort')]",

        "SitecoreBizFx": "[parameter('SitecoreBizFx')]",
        "SitecoreBizFxCertificateDnsName": "[parameter('SitecoreBizFxCertificateDnsName')]",
        "SitecoreBizFxDir": "[parameter('SitecoreBizFxDir')]",
        "SitecoreBizFxHostHeader": "[parameter('SitecoreBizFxHostHeader')]",
        "SitecoreBizFxServicesPort": "[parameter('SitecoreBizFxServicesPort')]",

        "SiteHostHeader": "[parameter('SiteHostHeader')]",

        "PackageSitecoreBizFxServicesContentDir": "[parameter('PackageSitecoreBizFxServicesContentDir')]",

        "RootCertFileName": "[parameter('RootCertFileName')]",

        "UserAccount": "[parameter('UserAccount')]"
      }
    },
    "DeploySitecoreIdentityServer": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\SitecoreIdentityServer\\SitecoreIdentityServer.json",

        "CommerceAuthoringHostHeader": "[parameter('CommerceAuthoringHostHeader')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",
        "SitecoreBizFxHostHeader": "[parameter('SitecoreBizFxHostHeader')]",
        "SitecoreBizFxServicesPort": "[parameter('SitecoreBizFxServicesPort')]",

        "SitecoreIdentityServer": "[parameter('SitecoreIdentityServer')]",
        "SitecoreIdentityServerCertificateDnsName": "[parameter('SitecoreIdentityServerCertificateDnsName')]",
        "SitecoreIdentityServerDir": "[parameter('SitecoreIdentityServerDir')]",
        "SitecoreIdentityServerHostHeader": "[parameter('SitecoreIdentityServerHostHeader')]",
        "SitecoreIdentityServerServicesPort": "[parameter('SitecoreIdentityServerServicesPort')]",

        "PackageSitecoreIdentityServerPath": "[parameter('PackageSitecoreIdentityServerPath')]",

        "SqlSitecoreCoreDbName": "[parameter('SqlSitecoreCoreDbName')]",
        "SqlSitecoreDbServer": "[parameter('SqlSitecoreDbServer')]",

        "SiteHostHeader": "[parameter('SiteHostHeader')]",

        "RootCertFileName": "[parameter('RootCertFileName')]",
        "UserAccount": "[parameter('UserAccount')]"
      }
    },
    "CopySiteUtilityFolder": {
      "Type": "Copy",
      "Params": {
        "Source": "[parameter('ToolsSiteUtilitiesDir')]",
        "Destination": "[parameter('SiteInstallDir')]"
      }
    },
    "DisableIndexUpdate": {
      // Speed up deployment
      "Type": "SetXml",
      "Params": [
        {
          "FilePath": "[variable('ContentSearchConfig'))]",
          "Xpath": "[variable('ContentSearchEnabledXPath')]",
          "Attributes": {
            "value": "false"
          }
        }
      ]
    },
    "DisableConfigFiles": {
      // Speed up deployment
      "Type": "DisableConfigFiles",
      "Params": {
        "ConfigDir": "[variable('MarketingConfigDir')]",
        "ConfigFileList": ["Sitecore.Marketing.Search.config"]
      }
    },
    "InstallPowershellExtensions": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\SitecoreUtilities\\InstallModule.json",
        "ModuleFullPath": "[parameter('PackagePowerShellExtensionsPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "PublishExtensions": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\SitecoreUtilities\\PublishToWeb.json",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallHabitatImagesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\HabitatImages\\HabitatImages.json",
        "ModuleFullPath": "[parameter('PackageHabitatImagesPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallAdventureWorksImagesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\AdvImages\\AdvImages.json",
        "ModuleFullPath": "[parameter('PackageAdventureWorksImagesPath ')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommerceConnectModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Connect\\Connect.json",
        "ModuleFullPath": "[parameter('PackageCommerceConnectPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
	"InstallCommercexProfilesModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Connect\\Connect_xProfiles.json",
        "ModuleFullPath": "[parameter('PackagexProfilesPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommercexAnalyticsModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Connect\\Connect_xAnalytics.json",
        "ModuleFullPath": "[parameter('PackagexAnalyticsPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "InstallCommerceMAModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Connect\\Connect_MarketingAutomation.json",
        "XConnectSitePath": "[parameter('XConnectInstallDir')]",
        "ModuleFullPath": "[parameter('PackageCommerceMAPath')]",
        "SitecoreAppDataPackagesDir": "[variable('SitecoreAppDataPackagesDir')]",
        "AutomationEngineModule": "[parameter('PackageMAForAutomationEnginePath')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
	},
    "InstallCommerceEngineConnectModule": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CEConnect\\CEConnect.json",
        "PackageFullPath": "[parameter('PackageCEConnectPath')]",
        "SitecoreAdminPackagesDir": "[variable('SitecoreAdminPackagesDir')]",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]",
        "MergeTool": "[parameter('ToolsMergeToolPath')]",
        "InputFile": "[variable('CEMergeInputFile')]",
        "WebConfig": "[variable('WebConfig')]"
      }
    },
    "CopyConnectModels": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\Connect\\Connect.Copy.Models.json",
        "InstallRootDst": "[parameter('SiteInstallDir')]",
        "XConnectInstallRootDst": "[parameter('XConnectInstallDir')]"
      }
    },
    "ImportRootCertificate": {
      "Type": "ImportCertificate",
      "Params": {
        "CertStoreLocation": "cert:\\localmachine\\my",
        "FilePath": "[parameter('CommerceEngineCertificatePath')]"
      }
    },
    "InitializeCommerce": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CEConnect\\InitializeCommerce.json",

        "CommerceAuthoringDir": "[parameter('CommerceAuthoringDir')]",
        "CommerceMinionsDir": "[parameter('CommerceMinionsDir')]",
        "CommerceOpsDir": "[parameter('CommerceOpsDir')]",
        "CommerceShopsDir": "[parameter('CommerceShopsDir')]",

        "CommerceAuthoringHostHeader": "[parameter('CommerceAuthoringHostHeader')]",
        "CommerceAuthoringServicesPort": "[parameter('CommerceAuthoringServicesPort')]",

        "EngineConnectIncludeDir": "[variable('EngineConnectIncludeDir')]",
        "CertificatePath": "[parameter('CommerceEngineCertificatePath')]"
      }
    },
    "InitializeCommerceEngine": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CommerceEngine\\CommerceEngine.Initialize.json",

        "CommerceAuthoringDir": "[parameter('CommerceAuthoringDir')]",
        "CommerceMinionsDir": "[parameter('CommerceMinionsDir')]",
        "CommerceOpsDir": "[parameter('CommerceOpsDir')]",
        "CommerceShopsDir": "[parameter('CommerceShopsDir')]",
        "CommerceShopsHostHeader": "[parameter('CommerceShopsHostHeader')]",
        "CommerceShopsServicesPort": "[parameter('CommerceShopsServicesPort')]",
        "SitecoreIdentityServerHostHeader": "[parameter('SitecoreIdentityServerHostHeader')]",
        "SitecoreIdentityServerServicesPort": "[parameter('SitecoreIdentityServerServicesPort')]",

        "SitecoreAdminAccount": {
          "UserName": "[parameter('SitecoreUsername')]",
          "Password": "[parameter('SitecoreUserPassword')]"
        }
      }
      },
    "EnableCEConnectDataProvider": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CEConnect\\EnableCEConnectDataProvider.json",
        "ConfigDir": "[variable('EngineConnectIncludeDir')]"
      }
    },
    "GenerateCatalogTemplates": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CEConnect\\GenerateCatalogTemplates.json",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "PublishCommerce": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\SitecoreUtilities\\PublishToWeb.json",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "EnableIndexUpdate": {
      "Type": "SetXml",
      "Params": [
        {
          "FilePath": "[variable('ContentSearchConfig'))]",
          "Xpath": "[variable('ContentSearchEnabledXPath')]",
          "Attributes": {
            "value": "true"
          }
        }
      ]
    },
    "EnableConfigFiles": {
      "Type": "EnableConfigFiles",
      "Params": {
        "ConfigDir": "[variable('MarketingConfigDir')]",
        "ConfigFileList": ["Sitecore.Marketing.Search.config"]
      }
    },
    "EnableCEConnectIndexing": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\Commerce\\CEConnect\\EnableCEConnectIndexing.json",
        "ConfigDir": "[variable('EngineConnectIncludeDir')]"
      }
    },
    "Reindex": {
      "Type": "InstallSitecoreConfiguration",
      "Params": {
        "Path": ".\\Configuration\\SitecoreUtilities\\RebuildIndexes.json",
        "BaseUrl": "[variable('UtilitiesBaseUrl')]"
      }
    },
    "RemoveSiteUtilityFolder": {
      "Type": "ManageCommerceService",
      "Params": {
        "Name": "Name",
        "PhysicalPath": "[variable('SiteUtilitiesDir')]",
        "Action": "Remove-Item"
      }
    }
  }
}
