{
  "Parameters": {
    "CertificateName": { "Type": "string", "Description": "The name of the certificate to be created." },
    "CertificateDnsName": { "Type": "string", "Default": "*.local", "Description": "The name of the certificate to be created." },
    "CertPath": { "Type": "string", "Description": "The physical path on disk where certificates will be stored.", "DefaultValue": "c:\\certificates" },
    "RootCertFileName": { "Type": "string", "Description": "The file name of the root certificate to be created.", "DefaultValue": "SitecoreRootCert" }
  },
  "Variables": {
    "Security.Root.CertificateDnsName": "[concat('DO_NOT_TRUST_', parameter('RootCertFileName'))]",
    "Security.Root.CertificateStore": "cert:\\LocalMachine\\Root",
    "Security.Client.CertificateStore": "cert:\\LocalMachine\\My"
  },
  "Tasks": {
    "CreatePaths": {
      // Create the physical disk path.
      "Type": "EnsurePath",
      "Params": {
        "Exists": ["[parameter('CertPath')]"]
      }
    },
    "CreateRootCert": {
      // Create the root certificate.
      "Type": "NewRootCertificate",
      "Params": {
        "Path": "[parameter('CertPath')]",
        "Name": "[parameter('RootCertFileName')]",
        "StoreLocation": "LocalMachine",
        "DnsName": "[variable('Security.Root.CertificateDnsName')]"
      }
    },
    "ImportRootCertificate": {
      // Import the root certificate.
      "Type": "ImportCertificate",
      "Params": {
        "CertStoreLocation": "[variable('Security.Root.CertificateStore')]",
        "FilePath": "[concat(joinpath(parameter('CertPath'), parameter('RootCertFileName')), '.crt')]"
      }
    },
    "ImportRootCertificateToLocalMachine": {
      // Import the root certificate to LocalMachine (make it searche able)
      "Type": "ImportCertificate",
      "Params": {
        "CertStoreLocation": "[variable('Security.Client.CertificateStore')]",
        "FilePath": "[concat(joinpath(parameter('CertPath'), parameter('RootCertFileName')), '.crt')]"
      }
    },
    "CreateSignedCert": {
      // Create a certificate signed by the root authority.
      "Type": "NewSignedCertificate",
      "Params": {
        "Signer": "[GetCertificate(variable('Security.Root.CertificateDnsName'), variable('Security.Root.CertificateStore'))]",
        "Path": "[parameter('CertPath')]",
        "CertStoreLocation": "[variable('Security.Client.CertificateStore')]",
        "Name": "[parameter('CertificateName')]",
        "DnsName": "[parameter('CertificateDnsName')]"
      }
    }
  }
}
